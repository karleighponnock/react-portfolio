{"version":3,"sources":["assets/portrait.jpg","components/Card/index.js","components/Lists/index.js","pages/Main/index.js","pages/Contact/index.js","components/Carosel/index.js","pages/Portfolio/index.js","components/Navbar/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","className","title","children","Lists","Main","src","Portrait","Projects","project","setProject","name","width","height","frameborder","scrolling","onClick","Portfolio","useState","Navbar","to","window","location","pathname","Footer","class","href","target","Wrapper","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7ea2b4d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.9963a811.jpg\";","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    // The most straightforward solution would be to add the Consumer to the Card component.\n    // This way, all Card components can have the Card context passed directly as props\n    <div>\n      <div\n        className=\"card\">\n        {/* Here, we do not pass the title to demonstrate that it can also be consumed from the CardTitleText component */}\n        <h1>{props.title}</h1>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Lists(props) {\n    return (\n        <div>\n            <h2>Languages</h2>\n            <ul>\n                <li>HTML</li>\n                <li>Javascript</li>\n            </ul>\n            <h2>Technologies</h2>\n                <li>CSS</li>\n                <li>React</li>\n        \n\n            {props.children}\n        </div>\n    );\n}\n\nexport default Lists;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../index.css\";\nimport \"./index.css\";\nimport Card from \"../../components/Card\"\nimport Portrait from \"../../assets/portrait.jpg\"\nimport Lists from \"../../components/Lists\";\n\n\nfunction Main() {\n\n  return (\n    <div>\n      <div>\n  \n          <Card>\n           <div className=\"image-text-container\">\n            <img className=\"portrait\" src={Portrait} />\n            <p className=\"about\"> Hello! My name is Karleigh Ponnock I am a dedicated Junior Front-End Web Developer in Miami, Florida. My background is in the visual arts both as a painter and tattoo artist. I have my Bachelor of Fine Arts and post graduation acquired full-stack programming skills such as JavaScript, React, Node, and mySQL through earning a certificate in Full Stack Development through the University of Central Florida. My passion is in the visual user experience. I love dynamic web applications and see the web page much like a canvas that must balance beauty and simplicity. Between HTML frameworks, CSS and front-end Javascript the possibilities are endless. I am self disciplined, passionate and have strong communication skills. Learning is an endless journey to me so any languages or technologies I am not familiar, or efficient with I am excited to pick up and add to my skill set.  I am seeking opportunities to utilize my programming skills in a quality, team-based environment where I can be of value and expand my knowledge as a developer. \n           </p>\n           <div className=\"list\">\n           <Lists />\n           </div>\n           </div>\n          </Card>\n      </div>\n\n    </div>\n  );\n}\n\n\nexport default Main;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../index.css\";\nimport \"./index.css\";\nimport Card from \"../../components/Card\"\nimport Container from \"../../components/Container\"\nimport Portrait from \"../../assets/portrait.jpg\"\nimport Lists from \"../../components/Lists\";\n\n\nfunction Main() {\n\n  return (\n    <div>\n      <Card>\n        <div className=\"image-text-container\">\n          \n          <a class=\"email\" href=\"mailto:KarleighPonnock@gmail.com?subject=Subject\">\n            Send an E-mail</a>\n        </div>\n      </Card>\n    </div>\n)}\n       \n\n\nexport default Main;\n","import React from \"react\";\nimport Card from \"../Card\"\nimport \"./style.css\";\n\nconst Projects = ({ project, setProject, name }) => {\n    if (project === 1) {\n        return (\n\n            <Card>\n                <Card>\n                    <iframe className=\"frame\" src=\"https://lamcnguyen89.github.io/Project-01--The-Electric-Art-Gallery/\" width=\"100%\" height=\"600px\" frameborder=\"0\" scrolling=\"yes\"></iframe>\n                </Card>\n                <button className=\"browse\" onClick={() => setProject(2)}> next </button>\n                <button className=\"browse\" onClick={() => setProject(4)}> back </button>\n            </Card>\n        )\n    } else if (project === 2) {\n        return (\n            <Card>\n                <Card>\n                    <iframe className=\"frame\" src=\"https://house-our-heroes.herokuapp.com/\" width=\"100%\" height=\"600px\" frameborder=\"0\" scrolling=\"yes\"></iframe>\n                </Card>\n                <button className=\"browse\" onClick={() => setProject(3)}> next </button>\n                <button className=\"browse\" onClick={() => setProject(1)}> back </button>\n            </Card>\n        )\n    } else if (project === 3) {\n        return (\n            <Card>\n                <Card >\n                    <iframe className=\"frame\" src=\"https://protected-tor-91451.herokuapp.com/\" width=\"100%\" height=\"600px\" frameborder=\"0\" scrolling=\"yes\" className=\"budget\"></iframe>\n                </Card>\n                <button className=\"browse\" onClick={() => setProject(4)}> next </button>\n                <button className=\"browse\" onClick={() => setProject(2)}> back </button>\n            </Card>\n\n        )\n    } else if (project === 4) {\n        return (\n            <Card>\n                <Card>\n                    <iframe className=\"frame\" src=\"https://shielded-hamlet-39897.herokuapp.com/\" width=\"100%\" height=\"600px\" frameborder=\"0\" scrolling=\"yes\"></iframe>\n                </Card>\n                <button className=\"browse\" onClick={() => setProject(1)}> next </button>\n                <button className=\"browse\" onClick={() => setProject(3)}> back </button>\n            </Card>\n\n        )\n    }\n}\n\nexport default Projects;","import React, { Component, useState } from 'react';\nimport Projects from \"../../components/Carosel\"\nimport \"../../index.css\";\n\nfunction Portfolio() {\n  const [project, setProject] = useState(1)\n\n\n\n  return (\n    <div>\n      <Projects\n        project={project}\n        setProject={setProject}\n      />\n    </div>\n  );\n}\n\nexport default Portfolio;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg text\">\n      <Link className=\"navbar-brand text\" to=\"/\">\n        Karleigh Ponnock\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/portfolio\"\n              className={\n                window.location.pathname === \"/portfolio\" || window.location.pathname === \"/home\"\n                  ? \"nav-link active text\"\n                  : \"nav-link text\"\n              }\n            >\n              Portfolio\n            </Link>\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link\n              to=\"/contact\"\n              className={window.location.pathname === \"/contact\" ? \"nav-link active text\" : \"nav-link text\"}\n            >\n             Contact\n            </Link>\n          </li> */}\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Footer() {\n  return (\n  <footer className=\"footer\">\n        <div class=\"sites container\">\n          <a className=\"links left\" href=\"https://github.com/karleighponnock\" target=\"_blank\">GitHub</a>\n          <a className=\"links center\" href=\"https://www.linkedin.com/in/karleigh-ponnock-3601421aa/\" target=\"_blank\">LinkedIn</a>\n          <a class=\"email\" href=\"mailto:KarleighPonnock@gmail.com?subject=Subject\">\n            Send an E-mail</a>\n      </div>\n  </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Main from \"./pages/Main\"\nimport Contact from \"./pages/Contact\";\nimport Portfolio from \"./pages/Portfolio\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./App.css\";\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Wrapper>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          {/* <Route exact path=\"/contact\" component={Contact} /> */}\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}